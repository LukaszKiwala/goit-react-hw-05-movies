{"version":3,"file":"static/js/815.3ab6338e.chunk.js","mappings":"6OAGaA,EAAaC,EAAAA,EAAAA,GAAH,8ZAeVC,GAAWD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,kDAIRG,EAAQH,EAAAA,EAAAA,IAAH,qPAcLI,EAAOJ,EAAAA,EAAAA,EAAH,8R,SCJjB,EAzBuB,SAAC,GAAwB,IAAtBK,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAC3BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACV,EAAD,WACE,UAACE,EAAD,CAAUS,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,GAA9C,WACE,SAACL,EAAD,CACEU,IACEP,EAAG,0CAAsCA,GAVnD,6EAYQQ,IAAKP,EACLQ,QAAQ,UAEV,SAACX,EAAD,UAAOG,QAId,ECtBYS,EAAKhB,EAAAA,EAAAA,GAAD,2FCgBjB,EAdmB,SAAC,GAAgB,IAAdiB,EAAa,EAAbA,OACpB,OACE,SAACD,EAAD,UACGC,EAAOC,KAAI,gBAAGb,EAAH,EAAGA,GAAIE,EAAP,EAAOA,MAAOY,EAAd,EAAcA,YAAd,OACV,SAAC,EAAD,CAAyBd,GAAIA,EAAIE,MAAOA,EAAOD,IAAKa,GAA/Bd,EADX,KAKjB,C,uLCVYe,E,QAAQpB,EAAAA,GAAH,yH,SCoClB,EA/Ba,WACX,OAA4BqB,EAAAA,EAAAA,UAAS,IAArC,eAAOJ,EAAP,KAAeK,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,2FACED,GAAa,GADf,mBAGiCE,EAAAA,EAAAA,sBAHjC,OAGUC,EAHV,OAIIP,EAAUO,GAJd,gDAMIL,EAAS,EAAD,IANZ,yBAQIE,GAAa,GARjB,6EAHc,0DACdI,EAaD,GAAE,KAGD,4BACGP,GAASQ,EAAAA,OAAAA,QAAA,UAAkBR,EAAMS,WAClC,SAACZ,EAAD,UAAO,mBACNK,IAAa,SAACQ,EAAA,EAAD,KACd,SAACC,EAAA,EAAD,CAAYjB,OAAQA,MAGzB,C","sources":["components/MoviesListItem/MoviesListItem.styled.jsx","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home.styled.jsx","pages/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesItem = styled.li`\n  flex-basis: calc((100% - 3 * (30px)) / 4);\n  border-radius: 5px;\n  background-color: #ffffff;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.08), 0px 3px 3px rgba(0, 0, 0, 0.02),\n    1px 3px 4px rgba(0, 0, 0, 0.08);\n\n  transition: box-shadow var(--transition), transform var(--transition);\n  &:hover,\n  &:focus {\n    box-shadow: var(--card-shadow);\n    transform: scale(1.02);\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  display: block;\n  object-fit: cover;\n  border-radius: 5px;\n\n  transition: var(--transition);\n  &:hover,\n  &:focus {\n    border-bottom-left-radius: 0px;\n    border-bottom-right-radius: 0px;\n  }\n`;\n\nexport const Info = styled.p`\n  height: 36px;\n  font-weight: 500;\n  font-size: 14px;\n  padding-top: 12px;\n  padding-left: 8px;\n  padding-right: 8px;\n  padding-bottom: 12px;\n  color: var(--primary-text-color);\n  text-transform: uppercase;\n  line-height: 1.16;\n  text-align: center;\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Image, Info, ItemLink, MoviesItem } from './MoviesListItem.styled';\n\nconst DEFAULT_POSTER_URL =\n  'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg';\n\nconst MoviesListItem = ({ id, url, title }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesItem>\n      <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n        <Image\n          src={\n            url ? `https://image.tmdb.org/t/p/w342/${url}` : DEFAULT_POSTER_URL\n          }\n          alt={title}\n          loading=\"lazy\"\n        />\n        <Info>{title}</Info>\n      </ItemLink>\n    </MoviesItem>\n  );\n};\n\nMoviesListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string,\n};\n\nexport default MoviesListItem;","import styled from '@emotion/styled';\n\nexport const List=styled.ul` display: flex;\nflex-wrap: wrap;\ngap: 30px;\nmargin-bottom: 30px;\n`;","import PropTypes from 'prop-types';\nimport MoviesListItem from 'components/MoviesListItem/MoviesListItem';\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => (\n        <MoviesListItem key={id} id={id} title={title} url={poster_path} />\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default MoviesList;","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  text-align: center;\n  text-transform: uppercase;\n  margin-bottom: 15px;\n  font-size: 20px;\n`;","import { useState, useEffect } from 'react';\nimport { fetchPopularMovies } from '../API';\nimport { Notify } from 'notiflix';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchTrendingMovies();\n\n    async function fetchTrendingMovies() {\n      setIsLoading(true);\n      try {\n        const responseMovies = await fetchPopularMovies();\n        setMovies(responseMovies);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  }, []);\n\n  return (\n    <main>\n      {error && Notify.failure(`${error.message}`)}\n      <Title>Trending today</Title>\n      {isLoading && <Loader />}\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;"],"names":["MoviesItem","styled","ItemLink","Link","Image","Info","id","url","title","location","useLocation","to","state","from","src","alt","loading","List","movies","map","poster_path","Title","useState","setMovies","error","setError","isLoading","setIsLoading","useEffect","fetchPopularMovies","responseMovies","fetchTrendingMovies","Notify","message","Loader","MoviesList"],"sourceRoot":""}